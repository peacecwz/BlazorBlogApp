@using BlogApp.Contract.Models
@using BlogApp.Web.Services
@inject IBlogService BlogService

@if (blogApp == null)
{
    <p>Loading...</p>
}
else
{
    <nav class="navbar navbar-toggleable-md navbar-light bg-white fixed-top mediumnavigation">
        <button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarsExampleDefault"
                aria-controls="navbarsExampleDefault" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="container">
            @if (!string.IsNullOrWhiteSpace(blogApp.Logo))
            {
                <a class="navbar-brand" href="/">
                    <img src="@blogApp.Logo" alt="@blogApp.Title">
                </a>
            }
            <div class="collapse navbar-collapse" id="navbarsExampleDefault">
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item active">
                        <a class="nav-link" href="/">Stories <span class="sr-only">(current)</span></a>
                    </li>
                    @if (categories == null)
                    {
                        <p>Loading...</p>
                    }
                    else
                    {
                        foreach (var category in categories)
                        {
                            <li class="nav-item">
                                <a class="nav-link" href="/Category/@category.Slug">@category.Name</a>
                            </li>
                        }
                    }
                </ul>
                <div class="form-inline my-2 my-lg-0">
                    <input class="form-control mr-sm-2" type="text" placeholder="Search" value="@search"
                           onchange="@((UIChangeEventArgs __e) =>
                                   {
                                       search = __e.Value.ToString();
                                       OnSearch.Invoke(search);
                                   })" />
                    <span class="search-icon">
                        <svg class="svgIcon-use" width="25" height="25" viewbox="0 0 25 25">
                            <path d="M20.067 18.933l-4.157-4.157a6 6 0 1 0-.884.884l4.157 4.157a.624.624 0 1 0 .884-.884zM6.5 11c0-2.62 2.13-4.75 4.75-4.75S16 8.38 16 11s-2.13 4.75-4.75 4.75S6.5 13.62 6.5 11z"></path>
                        </svg>
                    </span>
                </div>
            </div>
        </div>
    </nav>

}

@functions
{
[Parameter]
public Action<string> OnSearch { get; set; }

protected List<CategoryModel> categories = null;
protected BlogAppModel blogApp = null;
protected string search = "";

protected override async void OnInit()
{
    blogApp = await BlogService.GetBlogConfigurationAsync();
    Console.WriteLine(Microsoft.JSInterop.Json.Serialize(blogApp));
    categories = await BlogService.GetSpotlightCategoriesAsync();
    this.StateHasChanged();
}
}
